// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DotNetNuke.Tests.Website.DesktopModules.Sketch
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Read Sketches")]
    public partial class ReadSketchesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ReadSketches.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Read Sketches", "In order to understand how a DNN feature works\r\nAs a user with the correct permis" +
                    "sions\r\nI want to be able to find the Sketch easily and read it", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Reading a Sketch via the Online Help feature in DotNetNuke")]
        [NUnit.Framework.TestCaseAttribute("deadmau5", "password", "Anonymous", "06.01.05", null)]
        [NUnit.Framework.TestCaseAttribute("philt3r", "password", "Registered User", "06.02.03", null)]
        public virtual void ReadingASketchViaTheOnlineHelpFeatureInDotNetNuke(string scenarioUserName, string scenarioPassword, string scenarioRole, string version, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Reading a Sketch via the Online Help feature in DotNetNuke", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Role",
                        "Permission",
                        "Value"});
            table1.AddRow(new string[] {
                        "Registered Users",
                        "Full Control",
                        "Allowed"});
#line 7
 testRunner.Given("There is a Page called Sketches with these permissions", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Role",
                        "Permission",
                        "Value"});
            table2.AddRow(new string[] {
                        "Registered Users",
                        "Full Control",
                        "Allowed"});
#line 10
 testRunner.And("There is a Sketch View module on the page with these permissions", ((string)(null)), table2, "And ");
#line 13
 testRunner.And(string.Format("Login as {0} {1} {2}", scenarioUserName, scenarioPassword, scenarioRole), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.When(string.Format("Once you click the Online Help you will be redirected to Default.aspx?tabname=ske" +
                        "tches&helpculture=en-us&helpmodule=Sketch&helpversion={0}", version), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then(string.Format("When you get to the Online Help page you will see the About The Sketches Module f" +
                        "or version {0}", version), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
