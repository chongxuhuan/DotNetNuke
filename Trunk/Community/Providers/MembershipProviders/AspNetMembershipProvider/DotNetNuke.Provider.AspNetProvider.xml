<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetNuke.Provider.AspNetProvider</name>
    </assembly>
    <members>
        <member name="T:DotNetNuke.Security.Membership.AspNetMembershipProvider">
            -----------------------------------------------------------------------------
            Project:    DotNetNuke
            Namespace:  DotNetNuke.Provider.AspNetProvider
            Class:      AspNetMembershipProvider
            -----------------------------------------------------------------------------
            <summary>
            The AspNetMembershipProvider overrides the default MembershipProvider to provide
            an AspNet Membership Component (MemberRole) implementation
            </summary>
            <remarks>
            </remarks>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.ChangePassword(DotNetNuke.Entities.Users.UserInfo,System.String,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            ChangePassword attempts to change the users password
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to update.</param>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <returns>A Boolean indicating success or failure.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.ChangePasswordQuestionAndAnswer(DotNetNuke.Entities.Users.UserInfo,System.String,System.String,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            ChangePasswordQuestionAndAnswer attempts to change the users password Question
            and PasswordAnswer
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to update.</param>
            <param name="password">The password.</param>
            <param name="passwordQuestion">The new password question.</param>
            <param name="passwordAnswer">The new password answer.</param>
            <returns>A Boolean indicating success or failure.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.CreateUser(DotNetNuke.Entities.Users.UserInfo@)">
            -----------------------------------------------------------------------------
            <summary>
            CreateUser persists a User to the Data Store
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to persist to the Data Store.</param>
            <returns>A UserCreateStatus enumeration indicating success or reason for failure.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.DeleteUser(DotNetNuke.Entities.Users.UserInfo)">
            -----------------------------------------------------------------------------
            <summary>
            DeleteUser deletes a single User from the Data Store
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to delete from the Data Store.</param>
            <returns>A Boolean indicating success or failure.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.DeleteUsersOnline(System.Int32)">
            -----------------------------------------------------------------------------
            <summary>
            Deletes all UserOnline inof from the database that has activity outside of the
            time window
            </summary>
            <remarks>
            </remarks>
            <param name="timeWindow">Time Window in Minutes</param>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GeneratePassword">
            -----------------------------------------------------------------------------
            <summary>
            Generates a new random password (Length = Minimum Length + 4)
            </summary>
            <returns>A String</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GeneratePassword(System.Int32)">
            -----------------------------------------------------------------------------
            <summary>
            Generates a new random password
            </summary>
            <param name="length">The length of password to generate.</param>
            <returns>A String</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetOnlineUsers(System.Int32)">
            -----------------------------------------------------------------------------
            <summary>
            Gets a collection of Online Users
            </summary>
            <param name="portalId">The Id of the Portal</param>
            <returns>An ArrayList of UserInfo objects</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetPassword(DotNetNuke.Entities.Users.UserInfo,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            Gets the Current Password Information for the User 
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to delete from the Data Store.</param>
            <param name="passwordAnswer">The answer to the Password Question, ues to confirm the user
            has the right to obtain the password.</param>
            <returns>A String</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUser(System.Int32,System.Int32)">
            -----------------------------------------------------------------------------
            <summary>
            GetUserByUserName retrieves a User from the DataStore
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="userId">The id of the user being retrieved from the Data Store.</param>
            <returns>The User as a UserInfo object</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUserByDisplayName(System.Int32,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            GetUserByDisplayName retrieves a User from the DataStore
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="displayName">The displayName of the user being retrieved from the Data Store.</param>
            <returns>The User as a UserInfo object</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUserByUserName(System.Int32,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            GetUserByUserName retrieves a User from the DataStore
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="username">The username of the user being retrieved from the Data Store.</param>
            <returns>The User as a UserInfo object</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUserCountByPortal(System.Int32)">
            -----------------------------------------------------------------------------
            <summary>
            GetUserCountByPortal gets the number of users in the portal
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <returns>The no of users</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUserMembership(DotNetNuke.Entities.Users.UserInfo@)">
            -----------------------------------------------------------------------------
            <summary>
            GetUserMembership retrieves the UserMembership information from the Data Store
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user whose Membership information we are retrieving.</param>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsers(System.Int32,System.Int32,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsers gets all the users of the portal
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsers(System.Int32,System.Int32,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsers gets all the users of the portal
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <param name="includeDeleted">Include deleted users.</param>
            <param name="superUsersOnly">Only select super users.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersAdvancedSearch(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="portalId"></param>
            <param name="userId"></param>
            <param name="filterUserId"></param>
            <param name="filterRoleId"></param>
            <param name="relationshipTypeId"> </param>
            <param name="isAdmin"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="sortColumn"></param>
            <param name="sortAscending"></param>
            <param name="propertyNames"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersBasicSearch(System.Int32,System.Int32,System.Int32,System.String,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="portalId"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="sortColumn"></param>
            <param name="sortAscending"></param>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByEmail(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByEmail gets all the users of the portal whose email matches a provided
            filter expression
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="emailToMatch">The email address to use to find a match.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByEmail(System.Int32,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByEmail gets all the users of the portal whose email matches a provided
            filter expression
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="emailToMatch">The email address to use to find a match.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <param name="includeDeleted">Include deleted users.</param>
            <param name="superUsersOnly">Only select super users.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByUserName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByUserName gets all the users of the portal whose username matches a provided
            filter expression
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="userNameToMatch">The username to use to find a match.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByUserName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByUserName gets all the users of the portal whose username matches a provided
            filter expression
            </summary>
            <remarks>If all records are required, (ie no paging) set pageSize = -1</remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="userNameToMatch">The username to use to find a match.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <param name="includeDeleted">Include deleted users.</param>
            <param name="superUsersOnly">Only select super users.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByProfileProperty(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByProfileProperty gets all the users of the portal whose profile matches
            the profile property pased as a parameter
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="propertyName">The name of the property being matched.</param>
            <param name="propertyValue">The value of the property being matched.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.GetUsersByProfileProperty(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
            -----------------------------------------------------------------------------
            <summary>
            GetUsersByProfileProperty gets all the users of the portal whose profile matches
            the profile property pased as a parameter
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal</param>
            <param name="propertyName">The name of the property being matched.</param>
            <param name="propertyValue">The value of the property being matched.</param>
            <param name="pageIndex">The page of records to return.</param>
            <param name="pageSize">The size of the page</param>
            <param name="totalRecords">The total no of records that satisfy the criteria.</param>
            <param name="includeDeleted">Include deleted users.</param>
            <param name="superUsersOnly">Only select super users.</param>
            <returns>An ArrayList of UserInfo objects.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.IsUserOnline(DotNetNuke.Entities.Users.UserInfo)">
            -----------------------------------------------------------------------------
            <summary>
            Gets whether the user in question is online
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user.</param>
            <returns>A Boolean indicating whether the user is online.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.ResetPassword(DotNetNuke.Entities.Users.UserInfo,System.String)">
            -----------------------------------------------------------------------------
            <summary>
            ResetPassword resets a user's password and returns the newly created password
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to update.</param>
            <param name="passwordAnswer">The answer to the user's password Question.</param>
            <returns>The new Password.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.UnLockUser(DotNetNuke.Entities.Users.UserInfo)">
            -----------------------------------------------------------------------------
            <summary>
            Unlocks the User's Account
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user whose account is being Unlocked.</param>
            <returns>True if successful, False if unsuccessful.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.UpdateUser(DotNetNuke.Entities.Users.UserInfo)">
            -----------------------------------------------------------------------------
            <summary>
            UpdateUser persists a user to the Data Store
            </summary>
            <remarks>
            </remarks>
            <param name="user">The user to persist to the Data Store.</param>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.UpdateUsersOnline(System.Collections.Hashtable)">
            -----------------------------------------------------------------------------
            <summary>
            Updates UserOnline info
            time window
            </summary>
            <param name="userList">List of users to update</param>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.UserLogin(System.Int32,System.String,System.String,System.String,DotNetNuke.Security.Membership.UserLoginStatus@)">
            -----------------------------------------------------------------------------
            <summary>
            UserLogin attempts to log the user in, and returns the User if successful
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal the user belongs to</param>
            <param name="username">The user name of the User attempting to log in</param>
            <param name="password">The password of the User attempting to log in</param>
            <param name="verificationCode">The verification code of the User attempting to log in</param>
            <param name="loginStatus">An enumerated value indicating the login status.</param>
            <returns>The User as a UserInfo object</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Security.Membership.AspNetMembershipProvider.UserLogin(System.Int32,System.String,System.String,System.String,System.String,DotNetNuke.Security.Membership.UserLoginStatus@)">
            -----------------------------------------------------------------------------
            <summary>
            UserLogin attempts to log the user in, and returns the User if successful
            </summary>
            <remarks>
            </remarks>
            <param name="portalId">The Id of the Portal the user belongs to</param>
            <param name="username">The user name of the User attempting to log in</param>
            <param name="password">The password of the User attempting to log in (may not be used by all Auth types)</param>
            <param name="authType">The type of Authentication Used</param>
            <param name="verificationCode">The verification code of the User attempting to log in</param>
            <param name="loginStatus">An enumerated value indicating the login status.</param>
            <returns>The User as a UserInfo object</returns>
            -----------------------------------------------------------------------------
        </member>
    </members>
</doc>
